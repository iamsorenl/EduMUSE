Perfect — here's the updated summary including your existing Flask file upload server:

---

### Project Summary: EduMUSE Viewer + CrewAI Frontend

We’re building a **React frontend** that serves as a smart document viewer and control panel for an AI tutoring system (EduMUSE), powered by a **CrewAI backend**.

#### Core Features (Frontend)

* **PDF Viewer**: Render and navigate study documents (PDF/DOCX) using `react-pdf-highlighter`.
* **Text Highlighting**: Users can select and highlight text.
* **Action Buttons**: When text is highlighted, options like “Summarize,” “Search,” or “Quiz Me” appear.
* **REST Integration**: Sends selected text via `POST` to backend endpoints (e.g., `/summarize`).
* **Result Display**: Shows AI-generated outputs (summaries, search links, quiz questions) in a UI panel.

#### File Uploads

* A **Flask backend** is already running that can **accept file uploads of any type**, which will be used to:

  * Upload new study materials
  * Trigger document rendering in the frontend
  * Support dynamic document switching in the viewer

#### Backend Assumptions

* A REST API (Flask or FastAPI) connected to **CrewAI agents**
* Endpoints like:

  * `POST /summarize` → returns summary of selected text
  * (Future) `/search`, `/quiz`, `/feedback`, etc.

#### Tech Stack

* Frontend: React (with `react-pdf-highlighter`, Tailwind or MUI optional)
* Backend: Flask (file upload) + FastAPI/CrewAI (agent orchestration)
* Storage: Local or Firebase/Supabase later
* Optional: OpenAI/Gemini APIs for summarization, TTS, or OCR

#### Development Plan

1. Integrate your Flask upload route with React UI to handle user documents.
2. Render uploaded PDFs in the document viewer.
3. Add text selection and highlight handling.
4. POST selected text to CrewAI via REST.
5. Show results in a panel; expand to quizzes, TTS, and grading over time.

---

You can give this to your Copilot as project context in a README or `context.txt` file for better inline suggestions. Let me know if you want me to sketch out an upload UI flow next.
